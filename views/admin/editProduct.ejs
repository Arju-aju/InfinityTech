<%- include('./partials/adminHeader.ejs') %>
<style>
    .glass-effect {
        @apply bg-gray-800 bg-opacity-30 backdrop-blur-md border border-gray-700;
    }
    .fade-in {
        animation: fadeIn 0.5s ease-in;
    }
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }
    .image-preview {
        position: relative;
        display: inline-block;
    }
    .image-preview img {
        transition: opacity 0.3s ease;
    }
    .image-preview:hover .remove-btn {
        opacity: 1;
    }
    .remove-btn {
        position: absolute;
        top: 5px;
        right: 5px;
        background: rgba(255, 0, 0, 0.8);
        color: white;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        text-align: center;
        line-height: 20px;
        cursor: pointer;
        opacity: 0;
        transition: opacity 0.3s ease;
    }
    #cropModal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        z-index: 1000;
        justify-content: center;
        align-items: center;
    }
    #cropContainer {
        background: #1f2937; /* bg-gray-900 */
        padding: 20px;
        border-radius: 10px;
        border: 1px solid #374151; /* border-gray-700 */
        max-width: 600px;
        width: 90%;
    }
    #imageToCrop {
        max-width: 100%;
    }
</style>

<!-- Add SweetAlert and Cropper.js CDNs -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<div class="flex h-screen bg-gray-900">
    <%- include('./partials/adminSidebar.ejs') %>

    <div class="flex-1 overflow-x-hidden overflow-y-auto bg-gray-900">
        <div class="container mx-auto px-6 py-8">
            <div class="flex justify-between items-center mb-8 fade-in">
                <h3 class="text-3xl font-semibold text-white">Edit Product</h3>
                <a href="/admin/products" class="px-4 py-2 glass-effect text-white hover:bg-cyan-500 rounded-lg transition-all duration-300 transform hover:scale-105">
                    <i class="fas fa-arrow-left mr-2"></i>Back to Products
                </a>
            </div>

            <div class="glass-effect rounded-2xl p-8 max-w-4xl mx-auto fade-in">
                <form id="editProductForm" action="/admin/editProduct/<%= product._id %>" method="POST" enctype="multipart/form-data" class="space-y-6">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div class="space-y-6">
                            <div>
                                <label for="name" class="block text-sm font-medium text-gray-300 mb-2">Product Name*</label>
                                <input type="text" id="name" name="name" value="<%= product.name %>" required class="w-full px-4 py-3 rounded-lg bg-gray-800 border border-gray-700 text-white focus:border-cyan-500 transition-all duration-200">
                            </div>
                            <div>
                                <label for="brand" class="block text-sm font-medium text-gray-300 mb-2">Brand*</label>
                                <input type="text" id="brand" name="brand" value="<%= product.brand %>" required class="w-full px-4 py-3 rounded-lg bg-gray-800 border border-gray-700 text-white focus:border-cyan-500 transition-all duration-200">
                            </div>
                            <div>
                                <label for="description" class="block text-sm font-medium text-gray-300 mb-2">Description*</label>
                                <textarea id="description" name="description" rows="4" required class="w-full px-4 py-3 rounded-lg bg-gray-800 border border-gray-700 text-white focus:border-cyan-500 transition-all duration-200"><%= product.description %></textarea>
                            </div>
                            <div>
                                <label for="category" class="block text-sm font-medium text-gray-300 mb-2">Category*</label>
                                <select id="category" name="category" required class="w-full px-4 py-3 rounded-lg bg-gray-800 border border-gray-700 text-white focus:border-cyan-500 transition-all duration-200">
                                    <% categories.forEach(category => { %>
                                        <option value="<%= category._id %>" <%= product.category?._id.toString() === category._id.toString() ? 'selected' : '' %>><%= category.name %></option>
                                    <% }); %>
                                </select>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">Price (â‚¹)*</label>
                                <input type="number" id="price" name="price" value="<%= product.price %>" required min="0" step="0.01" class="w-full px-4 py-3 rounded-lg bg-gray-800 border border-gray-700 text-white focus:border-cyan-500 transition-all duration-200">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">Stock*</label>
                                <input type="number" id="stock" name="stock" value="<%= product.stock %>" required min="0" class="w-full px-4 py-3 rounded-lg bg-gray-800 border border-gray-700 text-white focus:border-cyan-500 transition-all duration-200">
                            </div>
                        </div>
                        <div class="space-y-6">
                            <div class="glass-effect p-6 rounded-lg">
                                <h3 class="text-lg font-medium text-gray-300 mb-4">Specifications</h3>
                                <div class="space-y-4">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-300 mb-2">Processor*</label>
                                        <input type="text" id="processor" name="processor" value="<%= product.specifications.processor %>" required class="w-full px-4 py-3 rounded-lg bg-gray-800 border border-gray-700 text-white focus:border-cyan-500 transition-all duration-200">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-300 mb-2">RAM*</label>
                                        <input type="text" id="ram" name="ram" value="<%= product.specifications.ram %>" required class="w-full px-4 py-3 rounded-lg bg-gray-800 border border-gray-700 text-white focus:border-cyan-500 transition-all duration-200">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-300 mb-2">Storage*</label>
                                        <input type="text" id="storage" name="storage" value="<%= product.specifications.storage %>" required class="w-full px-4 py-3 rounded-lg bg-gray-800 border border-gray-700 text-white focus:border-cyan-500 transition-all duration-200">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-300 mb-2">Graphics*</label>
                                        <input type="text" id="graphics" name="graphics" value="<%= product.specifications.graphics %>" required class="w-full px-4 py-3 rounded-lg bg-gray-800 border border-gray-700 text-white focus:border-cyan-500 transition-all duration-200">
                                    </div>
                                </div>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">Current Images</label>
                                <div id="currentImages" class="grid grid-cols-2 sm:grid-cols-3 gap-4 mb-4">
                                    <% product.images.forEach((image, index) => { %>
                                        <div class="relative group" data-image-index="<%= index %>">
                                            <img src="<%= image %>" alt="Product image" class="w-full h-32 object-cover rounded-lg">
                                            <button type="button" class="delete-image-btn absolute top-2 right-2 opacity-0 group-hover:opacity-100 bg-red-500 hover:bg-red-400 text-white rounded-full p-2 transition-opacity" data-image-path="<%= image %>">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </div>
                                    <% }); %>
                                </div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">Replace Images (Replaces all existing images)</label>
                                <input type="file" name="images" id="images" multiple accept="image/*" class="w-full px-4 py-3 rounded-lg bg-gray-800 border border-gray-700 text-white focus:border-cyan-500 transition-all duration-200">
                                <div id="imagePreviewContainer" class="mt-4 grid grid-cols-2 sm:grid-cols-3 gap-4"></div>
                                <p class="text-sm text-gray-400 mt-1">Note: Uploading new images will replace all existing images.</p>
                            </div>
                        </div>
                    </div>
                    <div class="flex justify-end space-x-4">
                        <a href="/admin/products" class="px-6 py-3 glass-effect text-white hover:bg-gray-700 rounded-lg transition-all duration-300">Cancel</a>
                        <button type="submit" id="submitBtn" class="px-6 py-3 bg-cyan-600 hover:bg-cyan-500 text-white rounded-lg transition-all duration-300 transform hover:scale-105">
                            <i class="fas fa-save mr-2"></i>Save Changes
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Crop Modal -->
<div id="cropModal">
    <div id="cropContainer">
        <img id="imageToCrop">
        <div class="mt-4 flex justify-end space-x-4">
            <button id="cancelCrop" class="px-4 py-2 bg-gray-700 text-white rounded-lg hover:bg-gray-600 border border-gray-600">Cancel</button>
            <button id="saveCrop" class="px-4 py-2 bg-cyan-600 text-white rounded-lg hover:bg-cyan-500 border border-cyan-700">Save Crop</button>
        </div>
    </div>
</div>

<%- include('./partials/adminFooter.ejs') %>

<script>
    let cropper;
    let selectedFiles = [];
    const form = document.getElementById('editProductForm');
    const imageInput = document.getElementById('images');
    const imagePreviewContainer = document.getElementById('imagePreviewContainer');
    const submitBtn = document.getElementById('submitBtn');
    const cropModal = document.getElementById('cropModal');
    const imageToCrop = document.getElementById('imageToCrop');
    const saveCropBtn = document.getElementById('saveCrop');
    const cancelCropBtn = document.getElementById('cancelCrop');
    let currentFileIndex = null;

    // Animation Functions
    function fadeIn(element) {
        element.style.opacity = '0';
        element.classList.remove('hidden');
        requestAnimationFrame(() => {
            element.style.transition = 'opacity 0.5s ease-in';
            element.style.opacity = '1';
        });
    }

    function fadeOut(element, callback) {
        element.style.transition = 'opacity 0.5s ease-out';
        element.style.opacity = '0';
        element.addEventListener('transitionend', function handler() {
            element.remove();
            if (callback) callback();
            element.removeEventListener('transitionend', handler);
        }, { once: true });
    }

    // Image Cropping
    function startCrop(file, index) {
        const reader = new FileReader();
        reader.onload = (e) => {
            imageToCrop.src = e.target.result;
            cropModal.style.display = 'flex';
            if (cropper) cropper.destroy();
            cropper = new Cropper(imageToCrop, {
                aspectRatio: 1,
                viewMode: 1,
                autoCropArea: 0.8,
            });
            currentFileIndex = index;
        };
        reader.readAsDataURL(file);
    }

    saveCropBtn.addEventListener('click', () => {
        const canvas = cropper.getCroppedCanvas();
        canvas.toBlob((blob) => {
            selectedFiles[currentFileIndex] = new File([blob], `cropped-${currentFileIndex}.jpg`, { type: 'image/jpeg' });
            updateImagePreview();
            cropModal.style.display = 'none';
            cropper.destroy();
        }, 'image/jpeg');
    });

    cancelCropBtn.addEventListener('click', () => {
        cropModal.style.display = 'none';
        cropper.destroy();
    });

    // Image Preview
    function updateImagePreview() {
        imagePreviewContainer.innerHTML = '';
        selectedFiles.forEach((file, index) => {
            const reader = new FileReader();
            reader.onload = (e) => {
                const div = document.createElement('div');
                div.className = 'image-preview';
                div.innerHTML = `
                    <img src="${e.target.result}" class="w-24 h-24 object-cover rounded-lg">
                    <span class="remove-btn" data-index="${index}">Ã—</span>
                `;
                imagePreviewContainer.appendChild(div);
                fadeIn(div);

                div.querySelector('.remove-btn').addEventListener('click', () => {
                    fadeOut(div, () => {
                        selectedFiles.splice(index, 1);
                        updateImagePreview();
                    });
                });

                div.querySelector('img').addEventListener('click', () => {
                    startCrop(file, index);
                });
            };
            reader.readAsDataURL(file);
        });
    }

    imageInput.addEventListener('change', () => {
        selectedFiles = Array.from(imageInput.files);
        updateImagePreview();
    });

    // Form Submission
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Saving...';

        const formData = new FormData(form);

        // Group specifications into an object
        const specifications = {
            processor: formData.get('processor'),
            ram: formData.get('ram'),
            storage: formData.get('storage'),
            graphics: formData.get('graphics')
        };
        formData.delete('processor');
        formData.delete('ram');
        formData.delete('storage');
        formData.delete('graphics');
        formData.append('specifications', JSON.stringify(specifications));

        // Handle cropped images
        if (selectedFiles.length > 0) {
            formData.delete('images');
            selectedFiles.forEach(file => {
                formData.append('images', file);
            });
        }

        try {
            const response = await fetch(form.action, {
                method: 'POST',
                body: formData
            });
            const data = await response.json();

            if (data.success) {
                await Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: data.message,
                    timer: 1500,
                    showConfirmButton: false
                });
                window.location.href = '/admin/products';
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message
                });
                submitBtn.disabled = false;
                submitBtn.innerHTML = '<i class="fas fa-save mr-2"></i>Save Changes';
            }
        } catch (error) {
            console.error('Submission error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An unexpected error occurred. Please try again.'
            });
            submitBtn.disabled = false;
            submitBtn.innerHTML = '<i class="fas fa-save mr-2"></i>Save Changes';
        }
    });

    // Delete Existing Image
    document.querySelectorAll('.delete-image-btn').forEach(btn => {
        btn.addEventListener('click', async function() {
            const imagePath = this.dataset.imagePath;
            const productId = '<%= product._id %>';

            const result = await Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to delete this image?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            });

            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/admin/deleteProductImage/${productId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ imagePath }),
                    });
                    const data = await response.json();

                    if (data.success) {
                        this.closest('.relative').remove();
                        Swal.fire('Deleted!', 'Image has been deleted.', 'success');
                    } else {
                        Swal.fire('Error', data.message, 'error');
                    }
                } catch (error) {
                    Swal.fire('Error', 'Failed to delete image', 'error');
                }
            }
        });
    });
</script>