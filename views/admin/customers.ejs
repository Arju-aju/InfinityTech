
<%- include('./partials/adminHeader.ejs') %>

<div class="flex min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-violet-900">
    <%- include('./partials/adminSidebar.ejs') %>
    <div class="container p-4 lg:p-8">
        <!-- Flash Messages with updated styling -->
        <% if (messages && messages.success && messages.success.length > 0) { %>
        <div class="bg-green-500 bg-opacity-20 border border-green-500 text-green-100 px-4 py-3 rounded-lg mb-4">
            <%= messages.success %>
            <button type="button" class="float-right" data-bs-dismiss="alert" aria-label="Close">
                <span class="text-green-100">&times;</span>
            </button>
        </div>
        <% } %>
        
        <% if (messages && messages.error && messages.error.length > 0) { %>
        <div class="bg-red-500 bg-opacity-20 border border-red-500 text-red-100 px-4 py-3 rounded-lg mb-4">
            <%= messages.error %>
            <button type="button" class="float-right" data-bs-dismiss="alert" aria-label="Close">
                <span class="text-red-100">&times;</span>
            </button>
        </div>
        <% } %>

        <!-- Breadcrumbs with updated styling -->
        <nav class="mb-4">
            <ol class="flex space-x-2 text-gray-300">
                <% breadcrumbs.forEach((crumb, index) => { %>
                    <li class="flex items-center">
                        <% if(index > 0) { %>
                            <span class="mx-2 text-gray-500">/</span>
                        <% } %>
                        <a href="<%= crumb.url %>" class="hover:text-purple-300 transition-colors"><%= crumb.name %></a>
                    </li>
                <% }) %>
            </ol>
        </nav>

        <!-- Glass-effect card -->
        <div class="backdrop-blur-md bg-white bg-opacity-10 rounded-xl shadow-xl border border-gray-200 border-opacity-20">
            <div class="p-6">
                <table class="w-full">
                    <thead>
                        <tr class="text-gray-200 border-b border-gray-700">
                            <th class="px-6 py-3 text-left">Name</th>
                            <th class="px-6 py-3 text-left">Email</th>
                            <th class="px-6 py-3 text-left">Phone</th>
                            <th class="px-6 py-3 text-left">Status</th>
                            <th class="px-6 py-3 text-left">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-700">
                        <% customers.forEach(customer => { %>
                        <tr class="text-gray-300 hover:bg-white hover:bg-opacity-5 transition-colors">
                            <td class="px-6 py-4"><%= customer.name %></td>
                            <td class="px-6 py-4"><%= customer.email %></td>
                            <td class="px-6 py-4"><%= customer.phone %></td>
                            <td class="px-6 py-4">
                                <span class="px-3 py-1 rounded-full text-sm <%= customer.isBlocked ? 'bg-red-500 bg-opacity-20 text-red-300 border border-red-500' : 'bg-green-500 bg-opacity-20 text-green-300 border border-green-500' %>">
                                    <%= customer.isBlocked ? 'Blocked' : 'Active' %>
                                </span>
                            </td>
                            <td class="px-6 py-4">
                                <button
                                    onclick="handleBlockUser('<%= customer._id %>', <%= customer.isBlocked %>)"
                                    class="px-4 py-2 rounded-lg text-sm font-medium <%= customer.isBlocked ? 'bg-green-500 bg-opacity-20 hover:bg-opacity-30 text-green-300 border border-green-500' : 'bg-red-500 bg-opacity-20 hover:bg-opacity-30 text-red-300 border border-red-500' %> transition-all"
                                >
                                    <%= customer.isBlocked ? 'Unblock' : 'Block' %>
                                </button>
                            </td>
                        </tr>
                        <% }) %>
                    </tbody>
                </table>

                <!-- Pagination with updated styling -->
                <% if (pagination.totalPages > 1) { %>
                <nav class="mt-6 flex justify-center">
                    <ul class="flex space-x-2">
                        <% for(let i = pagination.startPage; i <= pagination.endPage; i++) { %>
                        <li>
                            <a href="?page=<%= i %>" 
                               class="px-3 py-2 rounded-lg <%= i === pagination.currentPage ? 'bg-purple-500 text-white' : 'text-gray-300 hover:bg-white hover:bg-opacity-10' %> transition-colors">
                                <%= i %>
                            </a>
                        </li>
                        <% } %>
                    </ul>
                </nav>
                <% } %>
            </div>
        </div>
    </div>
</div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        const handleBlockUser = async (userId, currentStatus) => {
        try {
            const result = await Swal.fire({
                title: 'Are you sure?',
                text: `Do you want to ${currentStatus ? 'unblock' : 'block'} this user?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, proceed!'
            });

            if (result.isConfirmed) {
                const response = await fetch(`/admin/users/block/${userId}`, {  // Updated URL
                    method: 'PUT',  // Changed to PUT
                    headers: { 'Content-Type': 'application/json' }
                });

                const data = await response.json();

                if (data.success) {
                    Swal.fire({
                        title: 'Success!',
                        text: data.message,
                        icon: 'success',
                        timer: 1500
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire('Error!', data.message, 'error');
                }
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire('Error!', 'Something went wrong!', 'error');
        }
    };
    </script>
</body>
</html>