<%- include('./partials/adminHeader.ejs') %>

<style>
    /* Override conflicting styles */
    .products-container {
        display: block !important;
    }
    .product-grid {
        display: none !important;
    }
    .pagination-container {
        @apply mt-8 flex flex-col sm:flex-row items-center justify-between gap-4;
    }
    .pagination-button {
        @apply relative inline-flex items-center px-3 py-2 glass-effect text-sm text-gray-200 hover:bg-gray-700/50 transition-all duration-300;
    }
    .pagination-button.active {
        @apply bg-cyan-500/20 text-cyan-400;
    }
    .flash-message {
        @apply px-4 py-2 rounded-lg mt-4 text-center glass-effect;
    }
    .flash-success {
        @apply bg-green-500/20 text-green-400;
    }
    .flash-error {
        @apply bg-red-500/20 text-red-400;
    }
    tr:hover {
        @apply bg-gray-800/30; /* Adjusted for dark theme */
    }
    /* Main content styling */
    main {
        margin-left: var(--sidebar-width, 16rem);
        width: calc(100% - var(--sidebar-width, 16rem));
        min-height: 100vh; /* Ensure main spans full viewport height */
    }
    /* Sidebar styling */
    .sidebar {
        position: fixed;
        top: 0;
        left: 0;
        width: var(--sidebar-width, 16rem);
        z-index: 100;
        animation: slideIn 0.5s ease-out forwards; /* Slide-in animation */
    }
    @keyframes slideIn {
        from { transform: translateX(-100%); }
        to { transform: translateX(0); }
    }
</style>

<div class="flex min-h-screen bg-gray-900">
    <%- include('./partials/adminSidebar.ejs') %>
    <main class="flex-1 p-4 lg:p-8">
        <!-- Flash Messages -->
        <% if (messages && messages.success && messages.success.length > 0) { %>
            <div class="bg-green-500/20 border border-green-500 text-green-400 px-4 py-3 rounded-lg mb-4 glass-effect">
                <%= messages.success %>
                <button type="button" class="float-right" data-bs-dismiss="alert" aria-label="Close">
                    <span class="text-green-400">×</span>
                </button>
            </div>
        <% } %>
        
        <% if (messages && messages.error && messages.error.length > 0) { %>
            <div class="bg-red-500/20 border border-red-500 text-red-400 px-4 py-3 rounded-lg mb-4 glass-effect">
                <%= messages.error %>
                <button type="button" class="float-right" data-bs-dismiss="alert" aria-label="Close">
                    <span class="text-red-400">×</span>
                </button>
            </div>
        <% } %>

        <!-- Breadcrumbs -->
        <nav class="mb-6">
            <ol class="flex space-x-2 text-gray-300">
                <% breadcrumbs.forEach((crumb, index) => { %>
                    <li class="flex items-center">
                        <% if(index > 0) { %>
                            <span class="mx-2 text-gray-500">/</span>
                        <% } %>
                        <a href="<%= crumb.url %>" class="hover:text-cyan-400 transition-colors"><%= crumb.name %></a>
                    </li>
                <% }) %>
            </ol>
        </nav>

        <!-- Search and Filter Section -->
        <div class="glass-effect rounded-xl shadow-xl border border-gray-700 p-6 mb-6">
            <form id="searchForm" action="/admin/users" method="GET" class="flex flex-wrap gap-4">
                <div class="flex-1 min-w-[250px]">
                    <input 
                        type="text" 
                        name="search" 
                        value="<%= pagination.searchQuery || '' %>"
                        placeholder="Search by name, email or phone..." 
                        class="w-full px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg text-gray-200 placeholder-gray-400 focus:outline-none focus:border-cyan-500"
                    >
                </div>
                
                <div class="w-48">
                    <select 
                        name="status" 
                        class="w-full px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg text-gray-200 focus:outline-none focus:border-cyan-500"
                    >
                        <option value="all" <%= (pagination.statusFilter === 'all' || !pagination.statusFilter) ? 'selected' : '' %>>All Status</option>
                        <option value="active" <%= pagination.statusFilter === 'active' ? 'selected' : '' %>>Active</option>
                        <option value="blocked" <%= pagination.statusFilter === 'blocked' ? 'selected' : '' %>>Blocked</option>
                    </select>
                </div>

                <button 
                    type="submit" 
                    class="px-6 py-2 bg-cyan-600 hover:bg-cyan-500 rounded-lg text-white transition-colors flex items-center"
                >
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                    </svg>
                    Search
                </button>
                
                <a 
                    href="/admin/users" 
                    class="px-6 py-2 bg-gray-700 hover:bg-gray-600 rounded-lg text-white transition-colors flex items-center"
                >
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                    </svg>
                    Reset
                </a>
            </form>
        </div>

        <!-- Customers Table -->
        <div class="glass-effect rounded-xl shadow-xl border border-gray-700">
            <div class="p-6">
                <div class="overflow-x-auto">
                    <table class="w-full">
                        <thead>
                            <tr class="text-gray-200 border-b border-gray-700">
                                <th class="px-6 py-3 text-left">Name</th>
                                <th class="px-6 py-3 text-left">Email</th>
                                <th class="px-6 py-3 text-left">Phone</th>
                                <th class="px-6 py-3 text-left">Status</th>
                                <th class="px-6 py-3 text-left">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-700">
                            <% if (customers.length > 0) { %>
                                <% customers.forEach(customer => { %>
                                    <tr class="text-gray-300 hover:bg-gray-800/30 transition-colors">
                                        <td class="px-6 py-4"><%= customer.name %></td>
                                        <td class="px-6 py-4"><%= customer.email %></td>
                                        <td class="px-6 py-4"><%= customer.phone %></td>
                                        <td class="px-6 py-4">
                                            <span class="px-3 py-1 rounded-full text-sm <%= customer.isBlocked ? 'bg-red-500/20 text-red-400 border border-red-500' : 'bg-green-500/20 text-green-400 border border-green-500' %>">
                                                <%= customer.isBlocked ? 'Blocked' : 'Active' %>
                                            </span>
                                        </td>
                                        <td class="px-6 py-4">
                                            <button
                                                data-user-id="<%= customer._id %>"
                                                data-is-blocked="<%= customer.isBlocked %>"
                                                class="block-user-btn px-4 py-2 rounded-lg text-sm font-medium <%= customer.isBlocked ? 'bg-green-500/20 hover:bg-green-500/30 text-green-400 border border-green-500' : 'bg-red-500/20 hover:bg-red-500/30 text-red-400 border border-red-500' %> transition-all"
                                            >
                                                <%= customer.isBlocked ? 'Unblock' : 'Block' %>
                                            </button>
                                        </td>
                                    </tr>
                                <% }) %>
                            <% } else { %>
                                <tr>
                                    <td colspan="5" class="px-6 py-4 text-center text-gray-400">
                                        No customers found matching your criteria
                                    </td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                <% if (pagination.totalPages > 1) { %>
                    <nav class="mt-6 flex justify-center">
                        <ul class="flex flex-wrap gap-2">
                            <li>
                                <a href="?page=1&search=<%= pagination.searchQuery || '' %>&status=<%= pagination.statusFilter || 'all' %>" 
                                   class="px-3 py-2 rounded-lg text-gray-300 hover:bg-gray-700/50 transition-colors <%= pagination.currentPage === 1 ? 'opacity-50 pointer-events-none' : '' %>">
                                    First
                                </a>
                            </li>
                            <% for(let i = pagination.startPage; i <= pagination.endPage; i++) { %>
                                <li>
                                    <a href="?page=<%= i %>&search=<%= pagination.searchQuery || '' %>&status=<%= pagination.statusFilter || 'all' %>" 
                                       class="px-3 py-2 rounded-lg <%= i === pagination.currentPage ? 'bg-cyan-500/20 text-cyan-400' : 'text-gray-300 hover:bg-gray-700/50' %> transition-colors">
                                        <%= i %>
                                    </a>
                                </li>
                            <% } %>
                            <li>
                                <a href="?page=<%= pagination.totalPages %>&search=<%= pagination.searchQuery || '' %>&status=<%= pagination.statusFilter || 'all' %>" 
                                   class="px-3 py-2 rounded-lg text-gray-300 hover:bg-gray-700/50 transition-colors <%= pagination.currentPage === pagination.totalPages ? 'opacity-50 pointer-events-none' : '' %>">
                                    Last
                                </a>
                            </li>
                        </ul>
                    </nav>
                <% } %>
            </div>
        </div>
    </main>
</div>

<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const handleBlockUser = async (userId, currentStatus) => {
            try {
                const action = currentStatus ? 'unblock' : 'block';
                console.log(`Attempting to ${action} user ${userId}`);
                const result = await Swal.fire({
                    title: 'Are you sure?',
                    text: `Do you want to ${action} this user?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#0891b2',
                    cancelButtonColor: '#dc2626',
                    confirmButtonText: `Yes, ${action} user!`,
                    background: '#1f2937',
                    color: '#fff'
                });

                if (result.isConfirmed) {
                    const response = await fetch(`/admin/users/block/${userId}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        credentials: 'include' // Ensure session cookies are sent
                    });

                    const data = await response.json();
                    console.log('Response:', data);

                    if (data.success) {
                        await Swal.fire({
                            title: 'Success!',
                            text: data.message,
                            icon: 'success',
                            background: '#1f2937',
                            color: '#fff',
                            confirmButtonColor: '#0891b2',
                            timer: 1500
                        });
                        location.reload();
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: data.message || 'Failed to update user status',
                            icon: 'error',
                            background: '#1f2937',
                            color: '#fff',
                            confirmButtonColor: '#0891b2'
                        });
                    }
                }
            } catch (error) {
                console.error('Error in handleBlockUser:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'Something went wrong! Please ensure you are logged in as an admin.',
                    icon: 'error',
                    background: '#1f2937',
                    color: '#fff',
                    confirmButtonColor: '#0891b2'
                });
            }
        };

        document.querySelectorAll('.block-user-btn').forEach(button => {
            button.addEventListener('click', () => {
                const userId = button.getAttribute('data-user-id');
                const isBlocked = button.getAttribute('data-is-blocked') === 'true';
                handleBlockUser(userId, isBlocked);
            });
        });

        const searchInput = document.querySelector('input[name="search"]');
        if (searchInput) {
            let searchTimeout;
            searchInput.addEventListener('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(() => {
                    document.getElementById('searchForm').submit();
                }, 500);
            });
        } else {
            console.warn('Search input not found');
        }

        const statusSelect = document.querySelector('select[name="status"]');
        if (statusSelect) {
            statusSelect.addEventListener('change', function() {
                document.getElementById('searchForm').submit();
            });
        } else {
            console.warn('Status select not found');
        }

        // Dynamically adjust sidebar height to match main content
        const sidebar = document.querySelector('.sidebar');
        const main = document.querySelector('main');
        const updateHeight = () => {
            const mainHeight = main.offsetHeight;
            sidebar.style.height = `${Math.max(mainHeight, window.innerHeight)}px`;
        };
        updateHeight();
        window.addEventListener('resize', updateHeight);
    });
</script>

<%- include('./partials/adminFooter.ejs') %>