<%- include('./partials/adminHeader.ejs') %>

<div class="flex min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-violet-900">
    <%- include('./partials/adminSidebar.ejs') %>

    <!-- Main Content -->
    <main class="flex-1 overflow-x-hidden overflow-y-auto" role="main">
        <div class="container mx-auto px-6 py-8">
            <div class="flex justify-between items-center mb-8">
                <h1 class="text-3xl font-semibold text-white tracking-tight" aria-label="Categories Management">Categories</h1>
                <a href="/admin/addCategory" 
                   class="inline-flex items-center px-4 py-2 rounded-lg bg-cyan-600 hover:bg-cyan-500 text-white font-medium transition-all duration-200 transform hover:scale-105"
                   aria-label="Add New Category">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                    </svg>
                    Add New Category
                </a>
            </div>

            <!-- Categories Table -->
            <section class="backdrop-blur-lg bg-gray-900/50 rounded-2xl p-6 shadow-2xl border border-gray-800">
                <div class="overflow-x-auto">
                    <table class="w-full" aria-label="Categories List">
                        <thead>
                            <tr class="border-b border-gray-700">
                                <th class="px-6 py-4 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Category Name</th>
                                <th class="px-6 py-4 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Description</th>
                                <th class="px-6 py-4 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-4 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-700">
                            <% if (categories && categories.length) { %>
                                <% categories.forEach(category => { %>
                                <tr class="hover:bg-gray-800/30 transition-colors" data-category-id="<%= category._id %>">
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-300 font-medium">
                                        <%= category.name %>
                                    </td>
                                    <td class="px-6 py-4 text-sm text-gray-300">
                                        <%= category.description %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span id="status-<%= category._id %>"
                                              class="inline-flex px-2 py-1 text-xs font-semibold leading-5 rounded-full
                                                     <%= category.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %>"
                                              role="status">
                                            <%= category.isActive ? 'Active' : 'Inactive' %>
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-2">
                                        <button onclick="editCategory('<%= category._id %>')" 
                                                class="inline-flex items-center px-3 py-1.5 rounded-lg bg-gray-800 text-gray-300 hover:bg-gray-700 hover:text-white transition-all duration-200 transform hover:scale-105"
                                                aria-label="Edit Category">
                                            <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                            </svg>
                                            Edit
                                        </button>
                                        <button id="toggle-<%= category._id %>"
                                                onclick="toggleCategory('<%= category._id %>')" 
                                                class="inline-flex items-center px-3 py-1.5 rounded-lg <%= category.isActive ? 'bg-red-600 hover:bg-red-500' : 'bg-cyan-600 hover:bg-cyan-500' %> text-white transition-all duration-200 transform hover:scale-105"
                                                aria-label="<%= category.isActive ? 'Deactivate Category' : 'Activate Category' %>">
                                            <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                                      d="<%= category.isActive ? 'M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z' : 'M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z' %>">
                                                </path>
                                            </svg>
                                            <%= category.isActive ? 'Deactivate' : 'Activate' %>
                                        </button>
                                    </td>
                                </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="4" class="text-center text-gray-300 py-4">No categories found</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </section>
        </div>
    </main>
</div>

<!-- Edit Category Modal -->
<div id="editModal" class="fixed inset-0 bg-black/50 backdrop-blur-sm hidden items-center justify-center z-50" role="dialog" aria-modal="true">
    <div class="bg-gray-900/90 rounded-2xl p-8 max-w-lg w-full mx-4 shadow-2xl border border-gray-800">
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-xl font-semibold text-white" id="editModalTitle">Edit Category</h2>
            <button onclick="closeEditModal()" 
                    class="text-gray-400 hover:text-white transition-colors" 
                    aria-label="Close Edit Modal">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
        </div>
        <form id="editForm" class="space-y-6" novalidate>
            <input type="hidden" id="categoryId" name="categoryId"   >
            <div>
                <label for="editName" class="block text-sm font-medium text-gray-300 mb-2">Category Name</label>
                <input type="text" id="editName" name="name"   
                    class="w-full px-4 py-3 rounded-lg bg-gray-800 border border-gray-700 text-white placeholder-gray-400 focus:border-cyan-500 focus:ring-2 focus:ring-cyan-500/50 transition-all duration-200"
                    aria-  ="true" minlength="2" maxlength="100">
            </div>
            <div>
                <label for="editDescription" class="block text-sm font-medium text-gray-300 mb-2">Description</label>
                <textarea id="editDescription" name="description" rows="3" 
                    class="w-full px-4 py-3 rounded-lg bg-gray-800 border border-gray-700 text-white placeholder-gray-400 focus:border-cyan-500 focus:ring-2 focus:ring-cyan-500/50 transition-all duration-200"
                    aria-  ="true" maxlength="500"></textarea>
            </div>
            <div class="flex justify-end space-x-3 pt-4">
                <button type="button" onclick="closeEditModal()" 
                    class="px-4 py-2 rounded-lg bg-gray-800 text-gray-300 hover:bg-gray-700 hover:text-white transition-all duration-200"
                    aria-label="Cancel Edit">
                    Cancel
                </button>
                <button type="submit" 
                    class="px-4 py-2 rounded-lg bg-cyan-600 hover:bg-cyan-500 text-white transition-all duration-200"
                    aria-label="Save Category Changes">
                    Save Changes
                </button>
            </div>
        </form>
    </div>
</div>

<!-- SweetAlert2 for confirmations -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    function editCategory(categoryId) {
        fetch(`/admin/categories/${categoryId}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to fetch category details');
                }
                return response.json();
            })
            .then(data => {
                if (data.success && data.category) {
                    document.getElementById('categoryId').value = data.category._id;
                    document.getElementById('editName').value = data.category.name;
                    document.getElementById('editDescription').value = data.category.description;
                    
                    const editModal = document.getElementById('editModal');
                    editModal.classList.remove('hidden');
                    editModal.classList.add('flex');
                } else {
                    throw new Error(data.message || 'Failed to load category details');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: error.message,
                    background: '#1f2937',
                    color: '#fff',
                    confirmButtonColor: '#0891b2'
                });
            });
    }

    document.getElementById('editForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const categoryId = document.getElementById('categoryId').value;
        const formData = {
            name: document.getElementById('editName').value.trim(),
            description: document.getElementById('editDescription').value.trim()
        };
        
        // Updated endpoint to match the controller
        fetch(`/admin/updateCategory/${categoryId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: data.message,
                    background: '#1f2937',
                    color: '#fff',
                    confirmButtonColor: '#0891b2'
                }).then(() => {
                    window.location.reload();
                });
            } else {
                throw new Error(data.message);
            }
        })
        .catch(error => {
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: error.message,
                background: '#1f2937',
                color: '#fff',
                confirmButtonColor: '#0891b2'
            });
        });
    });

    function closeEditModal() {
        const editModal = document.getElementById('editModal');
        editModal.classList.add('hidden');
        editModal.classList.remove('flex');
        document.getElementById('editForm').reset();
    }
    function toggleCategory(categoryId) {
    const toggleButton = document.querySelector(`#toggle-${categoryId}`);
    const statusBadge = document.querySelector(`#status-${categoryId}`);

    fetch(`/admin/toggleCategoryStatus/${categoryId}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json'
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // Update the status badge
            if (statusBadge) {
                statusBadge.textContent = data.isActive ? 'Active' : 'Inactive';
                if (data.isActive) {
                    statusBadge.classList.remove('bg-red-100', 'text-red-800');
                    statusBadge.classList.add('bg-green-100', 'text-green-800');
                } else {
                    statusBadge.classList.remove('bg-green-100', 'text-green-800');
                    statusBadge.classList.add('bg-red-100', 'text-red-800');
                }
            }

            // Update the toggle button
            if (toggleButton) {
                // Update button text and icon
                const buttonText = data.isActive ? 'Deactivate' : 'Activate';
                const svgPath = data.isActive 
                    ? 'M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z'
                    : 'M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z';

                // Update button classes
                if (data.isActive) {
                    toggleButton.classList.remove('bg-cyan-600', 'hover:bg-cyan-500');
                    toggleButton.classList.add('bg-red-600', 'hover:bg-red-500');
                } else {
                    toggleButton.classList.remove('bg-red-600', 'hover:bg-red-500');
                    toggleButton.classList.add('bg-cyan-600', 'hover:bg-cyan-500');
                }

                // Update button content
                toggleButton.innerHTML = `
                    <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="${svgPath}"></path>
                    </svg>
                    ${buttonText}
                `;
            }

            // Show success message
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: data.message,
                background: '#1f2937',
                color: '#fff',
                confirmButtonColor: '#0891b2',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });
        } else {
            throw new Error(data.message || 'Failed to toggle category status');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: error.message,
            background: '#1f2937',
            color: '#fff',
            confirmButtonColor: '#0891b2'
        });
    });
}
</script>

<%- include('./partials/adminFooter.ejs') %>