<%- include('./partials/adminHeader.ejs') %>
<style>
    .glass-effect {
        @apply bg-gray-800 bg-opacity-30 backdrop-blur-md border border-gray-700;
    }
    .fade-in {
        animation: fadeIn 0.5s ease-in;
    }
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }
</style>

<div class="flex h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-violet-900">
    <%- include('./partials/adminSidebar.ejs') %>

    <main class="flex-1 overflow-x-hidden overflow-y-auto">
        <div class="container mx-auto px-6 py-8">
            <!-- Message Notification -->
            <% if (message) { %>
                <div class="mb-6 p-4 rounded-lg glass-effect fade-in <%= messageType === 'success' ? 'text-green-300 border-green-500' : 'text-red-300 border-red-500' %>">
                    <%= message %>
                </div>
            <% } %>

            <!-- Header -->
            <div class="flex justify-between items-center mb-8 fade-in">
                <h3 class="text-3xl font-semibold text-white">Products Management</h3>
                <a href="/admin/addProduct" class="px-4 py-2 bg-cyan-600 hover:bg-cyan-500 text-white rounded-lg transition-all duration-300 transform hover:scale-105">
                    <i class="fas fa-plus mr-2"></i>Add Product
                </a>
            </div>

            <!-- Filters -->
            <div class="glass-effect rounded-xl p-6 mb-8 fade-in">
                <form id="filterForm" method="GET" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                    <input type="text" name="search" value="<%= filters.search || '' %>" placeholder="Search products..." class="px-4 py-2 rounded-lg bg-gray-800 text-white border border-gray-700 focus:border-cyan-500">
                    <select name="category" class="px-4 py-2 rounded-lg bg-gray-800 text-white border border-gray-700 focus:border-cyan-500">
                        <option value="">All Categories</option>
                        <% categories.forEach(cat => { %>
                            <option value="<%= cat._id %>" <%= filters.category === cat._id.toString() ? 'selected' : '' %>><%= cat.name %></option>
                        <% }); %>
                    </select>
                    <select name="priceRange" class="px-4 py-2 rounded-lg bg-gray-800 text-white border border-gray-700 focus:border-cyan-500">
                        <option value="">All Prices</option>
                        <option value="0-1000" <%= filters.priceRange === '0-1000' ? 'selected' : '' %>>Under ₹1,000</option>
                        <option value="1000-5000" <%= filters.priceRange === '1000-5000' ? 'selected' : '' %>>₹1,000 - ₹5,000</option>
                        <option value="5000-10000" <%= filters.priceRange === '5000-10000' ? 'selected' : '' %>>₹5,000 - ₹10,000</option>
                        <option value="10000-50000" <%= filters.priceRange === '10000-50000' ? 'selected' : '' %>>₹10,000 - ₹50,000</option>
                        <option value="50000" <%= filters.priceRange === '50000' ? 'selected' : '' %>>Above ₹50,000</option>
                    </select>
                    <select name="stock" class="px-4 py-2 rounded-lg bg-gray-800 text-white border border-gray-700 focus:border-cyan-500">
                        <option value="">All Stock</option>
                        <option value="out" <%= filters.stock === 'out' ? 'selected' : '' %>>Out of Stock</option>
                        <option value="low" <%= filters.stock === 'low' ? 'selected' : '' %>>Low Stock</option>
                        <option value="available" <%= filters.stock === 'available' ? 'selected' : '' %>>In Stock</option>
                    </select>
                    <select name="status" class="px-4 py-2 rounded-lg bg-gray-800 text-white border border-gray-700 focus:border-cyan-500">
                        <option value="">All Status</option>
                        <option value="active" <%= filters.status === 'active' ? 'selected' : '' %>>Active</option>
                        <option value="inactive" <%= filters.status === 'inactive' ? 'selected' : '' %>>Inactive</option>
                        <option value="listed" <%= filters.status === 'listed' ? 'selected' : '' %>>Listed</option>
                        <option value="unlisted" <%= filters.status === 'unlisted' ? 'selected' : '' %>>Unlisted</option>
                    </select>
                    <button type="submit" class="px-4 py-2 bg-cyan-600 hover:bg-cyan-500 text-white rounded-lg transition-all duration-300">Apply Filters</button>
                    <button type="reset" onclick="window.location='/admin/products'" class="px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-all duration-300">Reset</button>
                </form>
            </div>

            <!-- Products Table -->
            <div class="glass-effect rounded-xl overflow-hidden fade-in">
                <table class="min-w-full divide-y divide-gray-700">
                    <thead class="bg-gray-800">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">Product</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">Category</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">Stock</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">Price</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-700">
                        <% products.forEach(product => { %>
                            <tr class="hover:bg-gray-700 transition-all duration-200">
                                <td class="px-6 py-4">
                                    <div class="flex items-center">
                                        <img src="<%= product.images[0] || '/images/placeholder.jpg' %>" alt="<%= product.name %>" class="h-10 w-10 rounded-lg object-cover">
                                        <div class="ml-4">
                                            <div class="text-sm font-medium text-white"><%= product.name %></div>
                                            <div class="text-sm text-gray-400"><%= product.brand %></div>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 text-sm text-gray-300"><%= product.category?.name || 'Uncategorized' %></td>
                                <td class="px-6 py-4">
                                    <span class="px-2 py-1 text-xs rounded-full <%= product.stock < 6 ? 'bg-red-500/20 text-red-400' : 'bg-green-500/20 text-green-400' %>">
                                        <%= product.stock %> units
                                    </span>
                                </td>
                                <td class="px-6 py-4 text-sm text-white">₹<%= product.price.toFixed(2) %></td>
                                <td class="px-6 py-4 text-right">
                                    <div class="flex justify-end space-x-3">
                                        <a href="/admin/editProduct/<%= product._id %>" class="text-cyan-400 hover:text-cyan-300 transition-colors"><i class="fas fa-edit"></i></a>
                                        <form action="/admin/products/<%= product._id %>/toggle-list" method="POST" class="inline">
                                            <button type="submit" class="<%= product.isListed ? 'text-green-400 hover:text-green-300' : 'text-red-400 hover:text-red-300' %> transition-colors">
                                                <i class="fas <%= product.isListed ? 'fa-eye' : 'fa-eye-slash' %>"></i>
                                            </button>
                                        </form>
                                        <form action="/admin/softDeleteProduct/<%= product._id %>" method="POST" class="inline">
                                            <button type="submit" class="text-red-400 hover:text-red-300 transition-colors"><i class="fas fa-trash"></i></button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <% if (pagination.totalPages > 1) { %>
                <div class="mt-8 flex justify-center fade-in">
                    <nav class="flex space-x-2">
                        <% if (pagination.hasPrevPage) { %>
                            <a href="/admin/products?page=<%= pagination.currentPage - 1 %>" class="px-3 py-2 glass-effect text-white hover:bg-cyan-500 transition-all duration-300 rounded-lg"><i class="fas fa-chevron-left"></i></a>
                        <% } %>
                        <% for(let i = 1; i <= pagination.totalPages; i++) { %>
                            <a href="/admin/products?page=<%= i %>" class="px-3 py-2 glass-effect <%= pagination.currentPage === i ? 'bg-cyan-500 text-white' : 'text-gray-300 hover:bg-cyan-500' %> transition-all duration-300 rounded-lg"><%= i %></a>
                        <% } %>
                        <% if (pagination.hasNextPage) { %>
                            <a href="/admin/products?page=<%= pagination.currentPage + 1 %>" class="px-3 py-2 glass-effect text-white hover:bg-cyan-500 transition-all duration-300 rounded-lg"><i class="fas fa-chevron-right"></i></a>
                        <% } %>
                    </nav>
                </div>
            <% } %>
        </div>
    </main>
</div>
<%- include('./partials/adminFooter.ejs') %>
<script>
    // DOM Elements
    const filterForm = document.getElementById('filterForm');
    const tableBody = document.querySelector('tbody');
    const paginationNav = document.querySelector('nav');

    // Animation Functions
    function fadeIn(element) {
        element.style.opacity = '0';
        element.classList.remove('hidden');
        requestAnimationFrame(() => {
            element.style.transition = 'opacity 0.5s ease-in, transform 0.5s ease-in';
            element.style.opacity = '1';
            element.style.transform = 'translateY(0)';
        });
    }

    function fadeOut(element, callback) {
        element.style.transition = 'opacity 0.5s ease-out, transform 0.5s ease-out';
        element.style.opacity = '0';
        element.style.transform = 'translateY(20px)';
        element.addEventListener('transitionend', function handler() {
            element.classList.add('hidden');
            callback();
            element.removeEventListener('transitionend', handler);
        }, { once: true });
    }

    // Fetch Products Dynamically
    async function fetchProducts(url) {
        try {
            const response = await fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' } });
            const html = await response.text();
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');
            
            // Update table
            const newTableBody = doc.querySelector('tbody');
            fadeOut(tableBody, () => {
                tableBody.innerHTML = newTableBody.innerHTML;
                fadeIn(tableBody);
            });

            // Update pagination
            const newPagination = doc.querySelector('nav');
            if (newPagination) {
                fadeOut(paginationNav, () => {
                    paginationNav.innerHTML = newPagination.innerHTML;
                    fadeIn(paginationNav);
                    attachPaginationListeners();
                });
            }
        } catch (error) {
            console.error('Error fetching products:', error);
        }
    }

    // Handle Form Submission
    filterForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const formData = new FormData(filterForm);
        const url = `/admin/products?${new URLSearchParams(formData).toString()}`;
        fetchProducts(url);
    });

    // Handle Pagination Clicks
    function attachPaginationListeners() {
        document.querySelectorAll('nav a').forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                fetchProducts(link.href);
            });
        });
    }
    attachPaginationListeners();

    // Handle Toggle and Soft Delete
    document.querySelectorAll('form[action*="/toggle-list"], form[action*="/softDeleteProduct"]').forEach(form => {
        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            const url = form.action;
            try {
                const response = await fetch(url, { method: 'POST' });
                if (response.redirected) {
                    window.location.href = response.url; // Follow redirect for flash messages
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });
    });
</script>