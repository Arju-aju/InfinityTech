<%- include('./partials/adminHeader.ejs') %>

<style>
    /* Override any existing grid styles */
    .products-container {
        display: block !important;
    }
    .product-grid {
        display: none !important;
    }
</style>

<div class="flex h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-violet-900">
    <%- include('./partials/adminSidebar.ejs') %>

    <main class="flex-1 overflow-x-hidden overflow-y-auto bg-opacity-50">
        <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Breadcrumbs -->
            <nav class="mb-6">
                <ol class="flex items-center space-x-2 text-sm text-gray-300">
                    <li class="flex items-center">
                        <a href="/admin/dashboard" class="hover:text-cyan-400 transition-colors">Dashboard</a>
                        <span class="mx-2">/</span>
                    </li>
                    <li>
                        <span class="text-cyan-400">Products</span>
                    </li>
                </ol>
            </nav>

            <!-- Header -->
            <div class="flex justify-between items-center mb-6">
                <h3 class="text-gray-100 text-3xl font-medium">Products Management</h3>
                <a href="/admin/addProduct" 
                   class="inline-flex items-center px-4 py-2 bg-cyan-500 hover:bg-cyan-600 text-white rounded-lg transition-colors duration-300">
                    <i class="fas fa-plus mr-2"></i>
                    Add Product
                </a>
            </div>

            <!-- Products Table Container -->
            <div class="products-container">
                <div class="glass-effect rounded-xl overflow-hidden shadow-xl">
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-700">
                            <thead>
                                <tr class="bg-gray-800/50">
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                                        Product
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                                        Category
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                                        Stock
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                                        Price
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                                        Discount
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                                        Status
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                                        Listing Status
                                    </th>
                                    <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-300 uppercase tracking-wider">
                                        Actions
                                    </th>
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-700 bg-opacity-50">
                                <% products.forEach(product => { %>
                                    <tr class="hover:bg-gray-800/30 transition-colors">
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <div class="flex items-center">
                                                <div class="flex-shrink-0 h-10 w-10">
                                                    <img class="h-10 w-10 rounded-lg object-cover" 
                                                         src="<%= product.images[0] || '/images/placeholder.jpg' %>" 
                                                         alt="<%= product.name %>">
                                                </div>
                                                <div class="ml-4">
                                                    <div class="text-sm font-medium text-gray-100">
                                                        <%= product.name %>
                                                    </div>
                                                    <div class="text-sm text-gray-400">
                                                        <%= product.brand %>
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <div class="text-sm text-gray-300">
                                                <%= product.category ? product.category.name : 'Uncategorized' %>
                                            </div>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full 
                                                <%= product.stock < 6 ? 'bg-red-500/20 text-red-400' : 'bg-green-500/20 text-green-400' %>">
                                                <%= product.stock %> units
                                            </span>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-100">
                                            â‚¹<%= product.price.toFixed(2) %>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <% if (product.discountPercentage) { %>
                                                <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-500/20 text-red-400">
                                                    <%= product.discountPercentage %>% OFF
                                                </span>
                                            <% } else { %>
                                                <span class="text-sm text-gray-400">-</span>
                                            <% } %>
                                        </td>
        
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <span class="<%= product.isDeleted ? 'text-red-400' : 'text-green-400' %>">
                                                <%= product.isDeleted ? 'Inactive' : 'Active' %>
                                            </span>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <span class="<%= product.isListed ? 'text-green-400' : 'text-red-400' %>">
                                                <%= product.isListed ? 'Listed' : 'Unlisted' %>
                                            </span>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                            <div class="flex justify-end space-x-3">
                                                <a href="/admin/editProduct/<%= product._id %>" 
                                                   class="text-cyan-400 hover:text-cyan-300 transition-colors duration-300">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <button onclick="toggleListStatus('<%= product._id %>')"
                                                        class="<%= product.isListed ? 'text-green-400 hover:text-green-300' : 'text-red-400 hover:text-red-300' %> transition-colors duration-300">
                                                    <i class="fas <%= product.isListed ? 'fa-eye' : 'fa-eye-slash' %>"></i>
                                                </button>
                                                <button onclick="softDeleteProduct('<%= product._id %>')"
                                                        class="text-red-400 hover:text-red-300 transition-colors duration-300">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Pagination -->
                <div class="flex items-center justify-between mt-8">
                    <div class="text-sm text-gray-400">
                        Showing <span class="font-medium"><%= ((currentPage - 1) * limit) + 1 %></span> to 
                        <span class="font-medium"><%= Math.min(currentPage * limit, totalProducts) %></span> of 
                        <span class="font-medium"><%= totalProducts %></span> results
                    </div>
                    <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                        <% if (currentPage > 1) { %>
                            <a href="/admin/products?page=<%= currentPage - 1 %>&limit=<%= limit %>" 
                               class="relative inline-flex items-center px-4 py-2 rounded-l-md glass-effect text-sm text-gray-200 hover:bg-gray-700/50 transition-all duration-300">
                                <i class="fas fa-chevron-left mr-1"></i>
                                Previous
                            </a>
                        <% } %>
                        
                        <% for(let i = 1; i <= totalPages; i++) { %>
                            <a href="/admin/products?page=<%= i %>&limit=<%= limit %>"
                               class="relative inline-flex items-center px-4 py-2 glass-effect text-sm
                                    <%= currentPage === i ? 'bg-cyan-500/20 text-cyan-400' : 'text-gray-200 hover:bg-gray-700/50' %>
                                    transition-all duration-300">
                                <%= i %>
                            </a>
                        <% } %>
                        
                        <% if (currentPage < totalPages) { %>
                            <a href="/admin/products?page=<%= currentPage + 1 %>&limit=<%= limit %>"
                               class="relative inline-flex items-center px-4 py-2 rounded-r-md glass-effect text-sm text-gray-200 hover:bg-gray-700/50 transition-all duration-300">
                                Next
                                <i class="fas fa-chevron-right ml-1"></i>
                            </a>
                        <% } %>
                    </nav>
                </div>
            </div>
        </div>
    </main>
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="fixed inset-0 z-50 hidden">
    <div class="absolute inset-0 bg-black/50 backdrop-blur-sm"></div>
    <div class="relative min-h-screen flex items-center justify-center p-4">
        <div class="glass-effect rounded-xl p-6 max-w-sm w-full">
            <h3 class="text-xl font-semibold text-gray-100 mb-4">Confirm Delete</h3>
            <p class="text-gray-300 mb-6">Are you sure you want to delete this product? This action cannot be undone.</p>
            <div class="flex justify-end space-x-4">
                <button onclick="closeDeleteModal()" 
                        class="px-4 py-2 text-gray-300 hover:text-gray-100 transition-colors">
                    Cancel
                </button>
                <button id="confirmDeleteBtn"
                        class="px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded-lg transition-colors">
                    Delete
                </button>
            </div>
        </div>
    </div>
</div>

<script>
function confirmDelete(productId) {
    const modal = document.getElementById('deleteModal');
    const confirmBtn = document.getElementById('confirmDeleteBtn');
    
    modal.classList.remove('hidden');
    confirmBtn.onclick = async () => {
        try {
            const response = await fetch(`/admin/deleteProduct/${productId}`, {
                method: 'DELETE'
            });
            
            if (response.ok) {
                window.location.reload();
            } else {
                console.error('Failed to delete product');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    };
}

function closeDeleteModal() {
    const modal = document.getElementById('deleteModal');
    modal.classList.add('hidden');
}

async function softDeleteProduct(productId) {
    try {
        const response = await fetch(`/admin/softDeleteProduct/${productId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        
        const data = await response.json();
        
        if (data.success) {
            window.location.reload();
        } else {
            console.error('Failed to soft delete product:', data.message);
            alert('Failed to update product status. Please try again.');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('An error occurred. Please try again.');
    }
}
</script>

<script>
    async function toggleListStatus(productId) {
        try {
            const response = await fetch(`/admin/products/${productId}/toggle-list`, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            
            if (response.ok) {
                window.location.reload();
            } else {
                console.error('Failed to toggle product status');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }

    async function softDeleteProduct(productId) {
    // First confirmation
    const result = await Swal.fire({
        title: 'Are you sure?',
        text: "You want to change this product's status?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, change it!'
    });

    if (result.isConfirmed) {
        try {
            const response = await fetch(`/admin/softDeleteProduct/${productId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            
            const data = await response.json();
            
            if (data.success) {
                await Swal.fire({
                    title: 'Success!',
                    text: data.message || 'Product status updated successfully',
                    icon: 'success',
                    timer: 2000,
                    showConfirmButton: false
                });
                window.location.reload();
            } else {
                await Swal.fire({
                    title: 'Error!',
                    text: data.message || 'Failed to update product status',
                    icon: 'error'
                });
            }
        } catch (error) {
            console.error('Error:', error);
            await Swal.fire({
                title: 'Error!',
                text: 'An unexpected error occurred',
                icon: 'error'
            });
        }
    }
}
</script>

<%- include('./partials/adminFooter.ejs') %>