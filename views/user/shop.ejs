<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shop - InfinityTech</title>
    <script defer src="https://cdnjs.cloudflare.com/ajax/libs/alpinejs/3.13.5/cdn.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        .card-hover:hover { transform: translateY(-10px); box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1); }
        .gradient-bg { background: linear-gradient(135deg, #667eea, #764ba2); }
    </style>
</head>
<body class="bg-gray-100 font-sans">
    <%- include('../partials/header') %>

    <!-- Hero Section -->
    <section class="gradient-bg text-white py-12">
        <div class="container mx-auto px-6 text-center">
            <h1 class="text-4xl md:text-5xl font-bold mb-4">Explore Our Laptop Collection</h1>
            <p class="text-lg md:text-xl">Find the perfect laptop for your needs with unbeatable deals!</p>
        </div>
    </section>

    <!-- Main Content -->
    <div class="container mx-auto px-6 py-8">
        <!-- Filters -->
        <div class="bg-white p-6 rounded-lg shadow-md mb-8">
            <div class="flex flex-wrap items-center gap-4 justify-center">
                <!-- Search Bar -->
                <div class="flex-grow max-w-md relative">
                    <form action="/shop" method="GET" id="searchForm">
                        <input 
                            type="text" 
                            name="search" 
                            value="<%= locals.searchQuery || '' %>"
                            placeholder="Search laptops..."
                            class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500"
                        >
                        <button type="submit" class="absolute right-2 top-1/2 transform -translate-y-1/2">
                            <i class="fas fa-search text-gray-500"></i>
                        </button>
                    </form>
                </div>

                <!-- Category Dropdown -->
                <div class="relative">
                    <select 
                        class="appearance-none bg-white border rounded-lg px-4 py-2 pr-8 focus:outline-none focus:ring-2 focus:ring-indigo-500" 
                        id="categorySelect" 
                        onchange="filterByCategory(this.value)"
                    >
                        <option value="">All Categories</option>
                        <% categories.forEach(category => { %>
                            <option value="<%= category._id %>"><%= category.name %></option>
                        <% }) %>
                    </select>
                    <i class="fas fa-chevron-down absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500"></i>
                </div>

                <!-- Price Range -->
                <div x-data="{ open: false }" class="relative">
                    <button 
                        @click="open = !open" 
                        class="bg-white border rounded-lg px-4 py-2 flex items-center focus:outline-none focus:ring-2 focus:ring-indigo-500"
                    >
                        <span>Price Range</span>
                        <i class="fas fa-chevron-down ml-2"></i>
                    </button>
                    <div 
                        x-show="open" 
                        @click.away="open = false" 
                        class="absolute right-0 mt-2 w-64 bg-white border rounded-lg shadow-lg p-4 z-10"
                    >
                        <div class="space-y-4">
                            <div class="flex space-x-4">
                                <input 
                                    type="number" 
                                    id="minPrice" 
                                    value="<%= locals.selectedMinPrice || '' %>"
                                    min="<%= locals.minPrice || 0 %>" 
                                    max="<%= locals.maxPrice || 999999 %>"
                                    placeholder="Min"
                                    class="w-1/2 px-2 py-1 border rounded"
                                >
                                <input 
                                    type="number" 
                                    id="maxPrice" 
                                    value="<%= locals.selectedMaxPrice || '' %>"
                                    min="<%= locals.minPrice || 0 %>" 
                                    max="<%= locals.maxPrice || 999999 %>"
                                    placeholder="Max"
                                    class="w-1/2 px-2 py-1 border rounded"
                                >
                            </div>
                            <button 
                                onclick="applyPriceFilter()"
                                class="w-full bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700"
                            >
                                Apply
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Sort Dropdown -->
                <div class="relative">
                    <select 
                        class="appearance-none bg-white border rounded-lg px-4 py-2 pr-8 focus:outline-none focus:ring-2 focus:ring-indigo-500" 
                        id="sortSelect" 
                        onchange="filterBySort(this.value)"
                    >
                        <option value="newest">New Arrivals</option>
                        <option value="price_low_to_high">Price: Low to High</option>
                        <option value="price_high_to_low">Price: High to Low</option>
                    </select>
                    <i class="fas fa-chevron-down absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500"></i>
                </div>

                <!-- Reset Filters -->
                <button 
                    onclick="resetFilters()" 
                    class="bg-gray-200 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-300"
                >
                    Reset Filters
                </button>
            </div>
        </div>

        <!-- Product Grid -->
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
            <% if (typeof products !== 'undefined' && products.length > 0) { %>
                <% products.forEach(product => { %>
                    <div class="bg-white rounded-lg shadow-md overflow-hidden card-hover transition-all duration-300">
                        <div class="relative">
                            <a href="/product/<%= product._id %>">
                                <img src="<%= product.images[0] %>" alt="<%= product.name %>" class="w-full h-48 object-cover">
                            </a>
                            <% if (product.offerDetails.discountPercentage > 0) { %>
                                <span class="absolute top-2 left-2 bg-red-500 text-white text-sm px-2 py-1 rounded">
                                    -<%= product.offerDetails.discountPercentage.toFixed(0) %>%
                                </span>
                            <% } %>
                            <button 
                                onclick="toggleWishlist('<%= product._id %>')"
                                class="absolute top-2 right-2 bg-white p-2 rounded-full shadow-md hover:bg-gray-100"
                            >
                                <i class="fas fa-heart text-gray-500 hover:text-red-500"></i>
                            </button>
                        </div>
                        <div class="p-4">
                            <a href="/product/<%= product._id %>">
                                <h3 class="text-lg font-semibold text-gray-800 mb-2 truncate"><%= product.name %></h3>
                                <div class="flex items-center justify-between mb-3">
                                    <div>
                                        <% if (product.offerDetails.discountPercentage > 0) { %>
                                            <span class="text-gray-500 line-through">₹<%= product.offerDetails.originalPrice.toFixed(2) %></span>
                                            <span class="text-xl font-bold text-indigo-600 ml-2">₹<%= product.offerDetails.finalPrice.toFixed(2) %></span>
                                        <% } else { %>
                                            <span class="text-xl font-bold text-indigo-600">₹<%= product.price.toFixed(2) %></span>
                                        <% } %>
                                    </div>
                                    <span class="bg-green-100 text-green-800 text-sm px-2 py-0.5 rounded">New</span>
                                </div>
                            </a>
                            <div class="flex space-x-2">
                                <button 
                                    onclick="addToCart('<%= product._id %>')" 
                                    class="flex-1 bg-indigo-100 hover:bg-indigo-200 text-indigo-800 py-2 rounded-md text-sm font-medium transition duration-200"
                                >
                                    Add to Cart
                                </button>
                                <button 
                                    onclick="buyNow('<%= product._id %>')" 
                                    class="flex-1 bg-indigo-600 hover:bg-indigo-700 text-white py-2 rounded-md text-sm font-medium transition duration-200"
                                >
                                    Buy Now
                                </button>
                            </div>
                        </div>
                    </div>
                <% }) %>
            <% } else { %>
                <div class="col-span-full text-center text-gray-500 py-10">
                    <i class="fas fa-box-open text-4xl mb-2"></i>
                    <p>No products available at the moment. Check back soon!</p>
                </div>
            <% } %>
        </div>

        <!-- Pagination -->
        <% if (totalPages > 1) { %>
            <div class="mt-8 flex justify-center">
                <nav class="inline-flex rounded-md shadow-sm">
                    <% if (currentPage > 1) { %>
                        <a href="/shop?page=<%= currentPage - 1 %>" class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-l-md hover:bg-gray-50">
                            <i class="fas fa-chevron-left mr-1"></i> Previous
                        </a>
                    <% } %>
                    <% for (let i = 1; i <= totalPages; i++) { %>
                        <a href="/shop?page=<%= i %>" class="px-4 py-2 text-sm font-medium <%= currentPage === i ? 'bg-indigo-600 text-white' : 'bg-white text-gray-700' %> border border-gray-300 hover:bg-gray-50">
                            <%= i %>
                        </a>
                    <% } %>
                    <% if (currentPage < totalPages) { %>
                        <a href="/shop?page=<%= currentPage + 1 %>" class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-r-md hover:bg-gray-50">
                            Next <i class="fas fa-chevron-right ml-1"></i>
                        </a>
                    <% } %>
                </nav>
            </div>
        <% } %>
    </div>

    <%- include('../partials/footer') %>

    <!-- Script Section -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
    // Utility function to update URL and reload with filters
    function updateUrl(params) {
        const url = new URL(window.location);
        Object.keys(params).forEach(key => {
            if (params[key]) url.searchParams.set(key, params[key]);
            else url.searchParams.delete(key);
        });
        window.location = url;
    }

    // Filter by category
    function filterByCategory(categoryId) {
        updateUrl({ category: categoryId, page: 1 });
    }

    // Filter by sort option
    function filterBySort(sortValue) {
        updateUrl({ sort: sortValue });
    }

    // Apply price range filter
    function applyPriceFilter() {
        const minPrice = document.getElementById('minPrice').value;
        const maxPrice = document.getElementById('maxPrice').value;
        updateUrl({ minPrice, maxPrice, page: 1 });
    }

    // Reset filters
    function resetFilters() {
        updateUrl({ category: '', sort: 'newest', minPrice: '', maxPrice: '', search: '', page: 1 });
    }

    // Add to cart (Updated to match home.ejs)
    function addToCart(productId) {
        showNotification('Adding to cart...', 'info');

        fetch('/api/cart/add', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId: productId, quantity: 1 }),
            credentials: 'same-origin'
        })
        .then(response => {
            if (!response.ok) {
                if (response.status === 401) throw new Error('Please log in to add items to cart');
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            const cartCounter = document.getElementById('cart-counter');
            if (cartCounter && data.totalItems) {
                cartCounter.textContent = data.totalItems;
                cartCounter.classList.remove('hidden');
            }
            showNotification('Product added to cart!', 'success');
        })
        .catch(error => {
            console.error('Error adding to cart:', error);
            showNotification(error.message || 'Failed to add product to cart. Please try again.', 'error');
        });
    }

    // Buy now
    function buyNow(productId) {
        showNotification('Processing...', 'info');
        fetch('/cart/add', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId, quantity: 1, buyNow: true }),
            credentials: 'same-origin'
        })
        .then(response => {
            if (!response.ok) throw new Error('Network response was not ok');
            return response.json();
        })
        .then(data => {
            if (data.success) window.location.href = data.redirect;
            else throw new Error(data.message || 'Failed to process');
        })
        .catch(error => {
            console.error('Error processing buy now:', error);
            showNotification(error.message || 'Failed to process. Please try again.', 'error');
        });
    }

    // Toggle wishlist
    function toggleWishlist(productId) {
        const wishlistBtn = event.currentTarget;
        const wishlistIcon = wishlistBtn.querySelector('i');
        wishlistIcon.classList.toggle('text-red-500');
        wishlistIcon.classList.toggle('text-gray-500');
        const isAdding = wishlistIcon.classList.contains('text-red-500');
        showNotification(isAdding ? 'Adding to wishlist...' : 'Removing from wishlist...', 'info');

        fetch('/wishlist/add', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId }),
            credentials: 'same-origin'
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) showNotification(data.message, 'success');
            else throw new Error(data.message);
        })
        .catch(error => {
            wishlistIcon.classList.toggle('text-red-500');
            wishlistIcon.classList.toggle('text-gray-500');
            showNotification(error.message || 'Failed to update wishlist', 'error');
        });
    }

    // Notification function
    function showNotification(message, type = 'info') {
        let bgColor;
        switch (type) {
            case 'success': bgColor = '#28a745'; break;
            case 'error': bgColor = '#dc3545'; break;
            case 'info': bgColor = '#007bff'; break;
            default: bgColor = '#6c757d';
        }
        Swal.fire({
            text: message,
            icon: type,
            toast: true,
            position: 'bottom-end',
            timer: 3000,
            timerProgressBar: true,
            showConfirmButton: false,
            background: bgColor,
            color: '#fff',
        });
    }

    // DOMContentLoaded
    document.addEventListener('DOMContentLoaded', () => {
        document.querySelector('#searchForm').addEventListener('submit', (e) => {
            e.preventDefault();
            const search = e.target.search.value;
            updateUrl({ search, page: 1 });
        });
        
        const categorySelect = document.getElementById('categorySelect');
        const sortSelect = document.getElementById('sortSelect');
        categorySelect.value = '<%= selectedCategory || "" %>';
        sortSelect.value = '<%= sortOption || "newest" %>';
    });
    </script>
</body>
</html>