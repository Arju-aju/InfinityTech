<%- include('../partials/header') %>

<!-- Hero Section -->
<main class="flex-grow pt-20">
  <!-- Hero Section -->
  <section class="relative bg-gradient-to-r from-indigo-900 to-indigo-600 overflow-hidden">
    <div class="absolute inset-0">
      <img src="/images/hero-bg.jpg" alt="Hero Background" class="w-full h-full object-cover opacity-30">
    </div>
    <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24 md:py-32 text-center">
      <h1 class="text-4xl md:text-5xl font-bold text-white mb-6 tracking-tight animate-fade-in">
        Discover the Latest Gaming Laptops
      </h1>
      <p class="text-lg md:text-xl text-gray-200 mb-8 animate-slide-up">
        Experience next-level performance with our premium selection
      </p>
      <a href="/products" class="inline-flex items-center px-6 py-3 text-base font-medium text-indigo-600 bg-white rounded-lg hover:bg-gray-100 transition-all duration-300">
        Explore Now
        <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
        </svg>
      </a>
    </div>
  </section>

  <!-- New Arrivals Section -->
  <section class="py-16 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-3xl md:text-4xl font-bold text-center mb-12 text-gray-800">New Arrivals</h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
        <% if (typeof newArrivals !== 'undefined' && newArrivals.length > 0) { %>
          <% newArrivals.forEach(function(product) { %>
            <div class="bg-white rounded-xl shadow-md overflow-hidden transition-all duration-300 hover:shadow-lg hover:-translate-y-1">
              <div class="relative">
                <a href="/product/<%= product._id %>">
                  <img src="<%= product.images[0] %>" alt="<%= product.name %>" class="w-full h-48 object-cover">
                </a>
                <button class="wishlist-btn absolute top-3 right-3 bg-white p-2 rounded-full shadow-sm hover:bg-gray-100" data-product-id="<%= product._id %>">
                  <svg class="h-5 w-5 text-gray-500 hover:text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                  </svg>
                </button>
              </div>
              <div class="p-4">
                <a href="/product/<%= product._id %>">
                  <h3 class="text-lg font-semibold text-gray-800 hover:text-indigo-600 transition-colors duration-200"><%= product.name %></h3>
                  <div class="flex items-center justify-between mt-2">
                    <div>
                      <% if (product.offerDetails && product.offerDetails.discountPercentage > 0 && product.offerDetails.finalPrice >= 0) { %>
                        <span class="text-gray-500 line-through text-sm">₹<%= product.offerDetails.originalPrice.toFixed(2) %></span>
                        <span class="text-xl font-bold text-indigo-600 ml-2">₹<%= Math.max(0, product.offerDetails.finalPrice).toFixed(2) %></span>
                        <span class="text-sm text-green-600 ml-2"><%= product.offerDetails.discountPercentage.toFixed(0) %>% OFF</span>
                        <% if (product.offerDetails.appliedOfferType) { %>
                          <span class="text-sm text-indigo-600 block">(<%= product.offerDetails.appliedOfferType.charAt(0).toUpperCase() + product.offerDetails.appliedOfferType.slice(1) %> Offer)</span>
                        <% } %>
                      <% } else { %>
                        <span class="text-xl font-bold text-indigo-600">₹<%= Math.max(0, (product.offerDetails ? product.offerDetails.finalPrice : product.price)).toFixed(2) %></span>
                      <% } %>
                    </div>
                    <span class="bg-green-100 text-green-700 text-xs font-medium px-2 py-1 rounded-full">New</span>
                  </div>
                </a>
                <div class="flex space-x-2 mt-4">
                  <button class="add-to-cart-btn flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 py-2 rounded-md text-sm font-medium transition duration-200" data-product-id="<%= product._id %>">
                    Add to Cart
                  </button>
                  <button class="buy-now-btn flex-1 bg-indigo-600 hover:bg-indigo-700 text-white py-2 rounded-md text-sm font-medium transition duration-200" data-product-id="<%= product._id %>">
                    Buy Now
                  </button>
                </div>
              </div>
            </div>
          <% }); %>
        <% } else { %>
          <div class="col-span-full text-center text-gray-500">No new arrivals available at the moment.</div>
        <% } %>
      </div>
    </div>
  </section>

  <!-- Featured Products Section -->
  <section class="py-16 bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-3xl md:text-4xl font-bold text-center mb-12 text-gray-800">Featured Products</h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
        <% if (typeof featuredProducts !== 'undefined' && featuredProducts.length > 0) { %>
          <% featuredProducts.forEach(function(product) { %>
            <div class="bg-white rounded-xl shadow-md overflow-hidden transition-all duration-300 hover:shadow-lg hover:-translate-y-1">
              <div class="relative">
                <a href="/product/<%= product._id %>">
                  <img src="<%= product.images[0] %>" alt="<%= product.name %>" class="w-full h-48 object-cover">
                </a>
                <button class="absolute top-3 right-3 bg-white p-2 rounded-full shadow-sm hover:bg-gray-100" onclick="toggleWishlist(event, '<%= product._id %>')">
                  <svg class="h-5 w-5 text-gray-500 hover:text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                  </svg>
                </button>
              </div>
              <div class="p-4">
                <a href="/product/<%= product._id %>">
                  <h3 class="text-lg font-semibold text-gray-800 hover:text-indigo-600 transition-colors duration-200"><%= product.name %></h3>
                  <div class="flex items-center justify-between mt-2">
                    <div>
                      <% if (product.offerDetails && product.offerDetails.discountPercentage > 0 && product.offerDetails.finalPrice >= 0) { %>
                        <span class="text-gray-500 line-through text-sm">₹<%= product.offerDetails.originalPrice.toFixed(2) %></span>
                        <span class="text-xl font-bold text-indigo-600 ml-2">₹<%= Math.max(0, product.offerDetails.finalPrice).toFixed(2) %></span>
                        <span class="text-sm text-green-600 ml-2"><%= product.offerDetails.discountPercentage.toFixed(0) %>% OFF</span>
                        <% if (product.offerDetails.appliedOfferType) { %>
                          <span class="text-sm text-indigo-600 block">(<%= product.offerDetails.appliedOfferType.charAt(0).toUpperCase() + product.offerDetails.appliedOfferType.slice(1) %> Offer)</span>
                        <% } %>
                      <% } else { %>
                        <span class="text-xl font-bold text-indigo-600">₹<%= Math.max(0, (product.offerDetails ? product.offerDetails.finalPrice : product.price)).toFixed(2) %></span>
                      <% } %>
                    </div>
                  </div>
                </a>
                <div class="flex space-x-2 mt-4">
                  <button onclick="addToCart('<%= product._id %>')" class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 py-2 rounded-md text-sm font-medium transition duration-200">
                    Add to Cart
                  </button>
                  <button onclick="buyNow('<%= product._id %>')" class="flex-1 bg-indigo-600 hover:bg-indigo-700 text-white py-2 rounded-md text-sm font-medium transition duration-200">
                    Buy Now
                  </button>
                </div>
              </div>
            </div>
          <% }); %>
        <% } else { %>
          <div class="col-span-full text-center text-gray-500">No featured products available at the moment.</div>
        <% } %>
      </div>
    </div>
  </section>

  <!-- Why Choose Us Section -->
  <section class="py-16 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-3xl md:text-4xl font-bold text-center mb-12 text-gray-800">Why Choose InfinityTech</h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8">
        <div class="text-center group">
          <div class="inline-block p-4 bg-white rounded-full shadow-md mb-4 transition-transform duration-300 group-hover:scale-110">
            <svg class="w-8 h-8 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
          </div>
          <h3 class="text-xl font-semibold mb-2 text-gray-800">Free Shipping</h3>
          <p class="text-gray-600 text-sm">On all orders over $999</p>
        </div>
        <div class="text-center group">
          <div class="inline-block p-4 bg-white rounded-full shadow-md mb-4 transition-transform duration-300 group-hover:scale-110">
            <svg class="w-8 h-8 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
            </svg>
          </div>
          <h3 class="text-xl font-semibold mb-2 text-gray-800">Easy Returns</h3>
          <p class="text-gray-600 text-sm">30-day return policy</p>
        </div>
        <div class="text-center group">
          <div class="inline-block p-4 bg-white rounded-full shadow-md mb-4 transition-transform duration-300 group-hover:scale-110">
            <svg class="w-8 h-8 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
            </svg>
          </div>
          <h3 class="text-xl font-semibold mb-2 text-gray-800">2-Year Warranty</h3>
          <p class="text-gray-600 text-sm">Extended coverage available</p>
        </div>
        <div class="text-center group">
          <div class="inline-block p-4 bg-white rounded-full shadow-md mb-4 transition-transform duration-300 group-hover:scale-110">
            <svg class="w-8 h-8 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192l-3.536 3.536M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-5 0a4 4 0 11-8 0 4 4 0 018 0z" />
            </svg>
          </div>
          <h3 class="text-xl font-semibold mb-2 text-gray-800">24/7 Support</h3>
          <p class="text-gray-600 text-sm">Expert assistance anytime</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Testimonials Section -->
  <section class="py-16 bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" x-data="{ slideIndex: 0 }">
      <h2 class="text-3xl md:text-4xl font-bold text-center mb-12 text-gray-800">What Our Customers Say</h2>
      <div class="relative">
        <div class="overflow-hidden">
          <div class="flex transition-transform duration-500" x-ref="slider" x-bind:style="`transform: translateX(-${slideIndex * 100}%);`">
            <!-- Testimonial 1 -->
            <div class="w-full flex-shrink-0">
              <div class="max-w-3xl mx-auto text-center">
                <img src="/images/testimonial1.jpg" alt="Customer" class="w-16 h-16 rounded-full mx-auto mb-4 object-cover shadow-sm">
                <p class="text-lg text-gray-600 mb-4">"The gaming laptop I purchased exceeded my expectations. The performance is incredible, and the customer service was exceptional!"</p>
                <div class="font-semibold text-gray-800">John Doe</div>
                <div class="text-gray-500 text-sm">Professional Gamer</div>
              </div>
            </div>
            <!-- Testimonial 2 -->
            <div class="w-full flex-shrink-0">
              <div class="max-w-3xl mx-auto text-center">
                <img src="/images/testimonial2.jpg" alt="Customer" class="w-16 h-16 rounded-full mx-auto mb-4 object-cover shadow-sm">
                <p class="text-lg text-gray-600 mb-4">"Perfect laptop for my business needs. The build quality is outstanding, and the battery life is impressive!"</p>
                <div class="font-semibold text-gray-800">Jane Smith</div>
                <div class="text-gray-500 text-sm">Business Executive</div>
              </div>
            </div>
          </div>
        </div>
        <button @click="slideIndex = slideIndex === 0 ? 1 : 0" class="absolute top-1/2 left-4 -translate-y-1/2 bg-white p-2 rounded-full shadow-md hover:bg-gray-100 transition-all duration-200">
          <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
        </button>
        <button @click="slideIndex = slideIndex === 0 ? 1 : 0" class="absolute top-1/2 right-4 -translate-y-1/2 bg-white p-2 rounded-full shadow-md hover:bg-gray-100 transition-all duration-200">
          <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </button>
      </div>
    </div>
  </section>
</main>

<%- include('../partials/footer') %>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      // Function to add a product to the cart
      function addToCart(productId) {
        showNotification('Adding to cart...', 'info');
        fetch('/api/cart/add', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ productId: productId, quantity: 1 }),
          credentials: 'same-origin'
        })
        .then(response => {
          if (!response.ok) throw new Error('Network response was not ok');
          return response.json();
        })
        .then(data => {
          const cartCounter = document.getElementById('cart-counter');
          if (cartCounter && data.totalItems) {
            cartCounter.textContent = data.totalItems;
            cartCounter.classList.remove('hidden');
          }
          showNotification('Product added to cart!', 'success');
        })
        .catch(error => {
          console.error('Error adding to cart:', error);
          showNotification('Failed to add product to cart. Please try again.', 'error');
        });
      }

      // Function to buy product now
      function buyNow(productId) {
        showNotification('Processing...', 'info');
        fetch('/api/cart/add', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ productId: productId, quantity: 1, buyNow: true }),
          credentials: 'same-origin'
        })
        .then(response => {
          if (!response.ok) throw new Error('Network response was not ok');
          return response.json();
        })
        .then(data => {
          window.location.href = '/checkout?source=buy_now';
        })
        .catch(error => {
          console.error('Error processing buy now:', error);
          showNotification('Failed to process. Please try again.', 'error');
        });
      }

      // Function to toggle wishlist
      function toggleWishlist(event, productId) {
        event.preventDefault();
        const wishlistBtn = event.currentTarget;
        const wishlistIcon = wishlistBtn.querySelector('svg');

        wishlistIcon.classList.toggle('text-red-500');
        wishlistIcon.classList.toggle('text-gray-500');

        const isAdding = wishlistIcon.classList.contains('text-red-500');
        showNotification(isAdding ? 'Adding to wishlist...' : 'Removing from wishlist...', 'info');

        fetch('/api/wishlist/toggle', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ productId }),
          credentials: 'same-origin'
        })
        .then(response => {
          if (!response.ok) {
            if (response.status === 401) {
              wishlistIcon.classList.toggle('text-red-500');
              wishlistIcon.classList.toggle('text-gray-500');
              showNotification('Please log in to modify wishlist', 'error');
              return { success: false };
            }
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(data => {
          if (data.success) {
            showNotification(data.added ? 'Product added to wishlist!' : 'Product removed from wishlist', 'success');
          } else {
            wishlistIcon.classList.toggle('text-red-500');
            wishlistIcon.classList.toggle('text-gray-500');
            showNotification(data.message || 'Error updating wishlist', 'error');
          }
        })
        .catch(error => {
          console.error('Error toggling wishlist:', error);
          wishlistIcon.classList.toggle('text-red-500');
          wishlistIcon.classList.toggle('text-gray-500');
          showNotification('Failed to update wishlist. Please try again.', 'error');
        });
      }

      // Function to show notifications using SweetAlert2
      function showNotification(message, type = 'info') {
        let bgColor;
        switch (type) {
          case 'success': bgColor = '#28a745'; break;
          case 'error': bgColor = '#dc3545'; break;
          case 'info': bgColor = '#007bff'; break;
          case 'warning': bgColor = '#ffc107'; break;
          default: bgColor = '#6c757d';
        }
        Swal.fire({
          text: message,
          icon: type,
          toast: true,
          position: 'bottom-end',
          timer: 3000,
          timerProgressBar: true,
          showConfirmButton: false,
          background: bgColor,
          color: '#fff',
        });
      }

      // Initialize functionality when DOM is loaded
      document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.wishlist-btn').forEach(button => {
          button.addEventListener('click', function(event) {
            const productId = this.getAttribute('data-product-id');
            if (productId) toggleWishlist(event, productId);
          });
        });

        document.querySelectorAll('.add-to-cart-btn').forEach(button => {
          button.addEventListener('click', function() {
            const productId = this.getAttribute('data-product-id');
            if (productId) addToCart(productId);
          });
        });

        document.querySelectorAll('.buy-now-btn').forEach(button => {
          button.addEventListener('click', function() {
            const productId = this.getAttribute('data-product-id');
            if (productId) buyNow(productId);
          });
        });

        fetch('/api/user/wishlist/products')
          .then(response => {
            if (!response.ok) {
              if (response.status === 401) return null;
              throw new Error('Network response was not ok');
            }
            return response.json();
          })
          .then(data => {
            if (data && data.wishlistItems) {
              data.wishlistItems.forEach(itemId => {
                const wishlistBtns = document.querySelectorAll(`[data-product-id="${itemId}"]`);
                wishlistBtns.forEach(btn => {
                  if (btn.classList.contains('wishlist-btn')) {
                    const wishlistIcon = btn.querySelector('svg');
                    if (wishlistIcon) {
                      wishlistIcon.classList.remove('text-gray-500');
                      wishlistIcon.classList.add('text-red-500');
                    }
                  }
                });
              });
            }
          })
          .catch(error => console.error('Error fetching wishlist data:', error));
      });
    </script>