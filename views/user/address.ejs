  <!DOCTYPE html>
  <html lang="en">
    <head>
      <meta charset="UTF-8" />
      <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <title>Manage Addresses</title>
      <script src="https://cdn.tailwindcss.com"></script>
      <link
        rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      />
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
      <style>
        .gradient-bg {
          background: linear-gradient(135deg, #6366f1, #8b5cf6);
          background-size: 400% 400%;
          animation: gradient 15s ease infinite;
        }
        .glass-card {
          background: rgba(255, 255, 255, 0.1);
          backdrop-filter: blur(10px);
          border: 1px solid rgba(255, 255, 255, 0.2);
        }
        .hidden {
          display: none;
        }
        #editModal,
        #addAddressModal {
          z-index: 1000; /* Ensure it's on top of other elements */
        }
        @keyframes gradient {
          0% {
            background-position: 0% 50%;
          }
          50% {
            background-position: 100% 50%;
          }
          100% {
            background-position: 0% 50%;
          }
        }
      </style>
    </head>
    <body class="gradient-bg min-h-screen flex">
      <div class="w-72 bg-white/5 text-white p-8 flex flex-col h-screen overflow-y-auto shadow-xl">
        <div class="mb-12 text-center">
            <img id="sidebar-profile-image" src="images/default-avatar.svg" 
                 alt="Profile" class="w-28 h-28 rounded-full mx-auto mb-6 object-cover border-4 border-white/20 shadow-md">
            <h2 id="sidebar-profile-name" class="text-2xl font-bold"><%= userProfile.name %></h2>
            <p id="sidebar-profile-email" class="text-white/60 text-sm"><%= userProfile.email %></p>
        </div>
        <nav>
            <ul class="space-y-3">
                <li class="sidebar-link bg-white/20 rounded-xl">
                    <a href="/profile" class="block p-4 flex items-center text-white font-semibold">
                        <i class="fas fa-user mr-4 text-indigo-300"></i>Profile
                    </a>
                </li>
                <li class="sidebar-link rounded-xl">
                    <a href="/address" class="block p-4 flex items-center text-white/80 hover:text-white">
                        <i class="fas fa-address-book mr-4 text-indigo-300"></i>Address Book
                    </a>
                </li>
                <li class="sidebar-link rounded-xl">
                    <a href="/orders" class="block p-4 flex items-center text-white/80 hover:text-white">
                        <i class="fas fa-shopping-cart mr-4 text-indigo-300"></i>Orders
                    </a>
                </li>
                <li class="sidebar-link rounded-xl">
                    <a href="/wallet" class="block p-4 flex items-center text-white/80 hover:text-white">
                        <i class="fas fa-wallet mr-4 text-indigo-300"></i>Wallet
                    </a>
                </li>
                <li class="sidebar-link rounded-xl">
                    <a href="/changePassword" class="block p-4 flex items-center text-white/80 hover:text-white">
                        <i class="fas fa-key mr-4 text-indigo-300"></i>Password
                    </a>
                </li>
                <li class="sidebar-link rounded-xl">
                    <a href="/logout" class="block p-4 flex items-center text-white/80 hover:text-white">
                        <i class="fas fa-sign-out-alt mr-4 text-indigo-300"></i>Logout
                    </a>
                </li>
            </ul>
        </nav>
    </div>
      <div class="flex-1 p-8">
        <!-- Button to toggle address form -->
        <button
          onclick="openAddAddressForm()"
          class="bg-green-500 hover:bg-green-600 px-4 py-2 rounded-lg text-white mb-6"
        >
          Create New Address
        </button>

        <!-- Add Address Modal -->
        <div id="addAddressModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center">
          <div class="glass-card p-6 rounded-lg text-white shadow-lg max-w-lg w-full relative">
            <button onclick="closeAddAddressForm()" class="absolute top-2 right-2 text-white text-xl">
              &times;
            </button>
            <h3 class="text-xl font-semibold mb-4">Add New Address</h3>
            <form id="addAddressForm" action="/add-address" method="POST" class="space-y-4" novalidate>
              <div>
                <label class="block font-semibold mb-1">Address Type</label>
                <select name="addressType" class="w-full p-2 rounded bg-white/20 text-white" required>
                  <option value="">Select address type</option>
                  <option value="Home">Home</option>
                  <option value="Work">Work</option>
                </select>
                <span class="text-red-500 text-sm hidden error-message"></span>
              </div>
              <div>
                <label class="block font-semibold mb-1">Full Name</label>
                <input type="text" name="name" class="w-full p-2 rounded bg-white/20 text-white" required />
                <span class="text-red-500 text-sm hidden error-message"></span>
              </div>
              <div>
                <label class="block font-semibold mb-1">Address</label>
                <input type="text" name="address" class="w-full p-2 rounded bg-white/20 text-white" required />
                <span class="text-red-500 text-sm hidden error-message"></span>
              </div>
              <div>
                <label class="block font-semibold mb-1">City</label>
                <input type="text" name="city" class="w-full p-2 rounded bg-white/20 text-white" required />
                <span class="text-red-500 text-sm hidden error-message"></span>
              </div>
              <div>
                <label class="block font-semibold mb-1">Landmark</label>
                <input type="text" name="landmark" class="w-full p-2 rounded bg-white/20 text-white" required />
                <span class="text-red-500 text-sm hidden error-message"></span>
              </div>
              <div>
                <label class="block font-semibold mb-1">State</label>
                <input type="text" name="state" class="w-full p-2 rounded bg-white/20 text-white" required />
                <span class="text-red-500 text-sm hidden error-message"></span>
              </div>
              <div>
                <label class="block font-semibold mb-1">Pincode</label>
                <input type="number" name="pincode" class="w-full p-2 rounded bg-white/20 text-white" required />
                <span class="text-red-500 text-sm hidden error-message"></span>
              </div>
              <div>
                <label class="block font-semibold mb-1">Phone</label>
                <input type="text" name="phone" class="w-full p-2 rounded bg-white/20 text-white" required />
                <span class="text-red-500 text-sm hidden error-message"></span>
              </div>
              <button type="submit" class="bg-green-500 hover:bg-green-600 px-4 py-2 rounded-lg w-full">
                Add Address
              </button>
            </form>
          </div>
        </div>

        <!-- Edit Address Modal (Hidden by Default) -->
        <div
          id="editModal"
          class="hidden fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center"
        >
          <div
            class="glass-card p-6 rounded-lg text-white shadow-lg max-w-lg w-full relative"
          >
            <button
              onclick="closeEditForm()"
              class="absolute top-2 right-2 text-white text-xl"
            >
              &times;
            </button>
            <h3 class="text-xl font-semibold mb-4">Edit Address</h3>
            <form id="editAddressForm" action="/edit-address/" method="POST" class="space-y-4">
              <input type="hidden" name="id" id="editId" />
              <div>
                <label class="block font-semibold mb-1">Address Type</label>
                <select name="addressType" class="w-full p-2 rounded bg-white/20 text-white">
                  <option value="Home">Home</option>
                  <option value="Work">Work</option>
                </select>
              </div>
              <div>
                <label class="block font-semibold mb-1">Full Name</label>
                <input type="text" name="name" id="editName" required class="w-full p-2 rounded bg-white/20 text-white" />
              </div>
              <div>
                <label class="block font-semibold mb-1">Address</label>
                <input type="text" name="address" id="editAddress" required class="w-full p-2 rounded bg-white/20 text-white" />
              </div>
              <div>
                <label class="block font-semibold mb-1">Landmark</label>
                <input type="text" name="landmark" id="editLandmark" required class="w-full p-2 rounded bg-white/20 text-white" />
              </div>
              <div>
                <label class="block font-semibold mb-1">City</label>
                <input type="text" name="city" id="editCity" required class="w-full p-2 rounded bg-white/20 text-white" />
              </div>
              <div>
                <label class="block font-semibold mb-1">State</label>
                <input type="text" name="state" id="editState" required class="w-full p-2 rounded bg-white/20 text-white" />
              </div>
              <div>
                <label class="block font-semibold mb-1">Pincode</label>
                <input type="number" name="pincode" id="editPincode" required class="w-full p-2 rounded bg-white/20 text-white" />
              </div>
              <div>
                <label class="block font-semibold mb-1">Phone</label>
                <input type="text" name="phone" id="editPhone" required class="w-full p-2 rounded bg-white/20 text-white" />
              </div>
              <button type="submit" class="bg-indigo-500 hover:bg-indigo-600 px-4 py-2 rounded-lg w-full">
                Save Changes
              </button>
            </form>
          </div>
        </div>

        <!-- Display Saved Addresses -->
        <div class="mt-8">
          <h3 class="text-xl font-bold text-white mb-4">Saved Addresses</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            <% userAddresses.forEach(address => { %>
            <div class="glass-card p-4 rounded-lg text-white shadow-lg">
              <h4 class="font-semibold text-lg">
                <%= address.addressType %> Address
                <% if (address.isDefault) { %>
                  <span class="text-green-400 text-sm">Default</span>
                <% } %>
              </h4>
              <p class="text-gray-300"><%= address.name %></p>
              <p class="text-gray-300"><%= address.address %></p>
              <p class="text-gray-300"><%= address.landmark %></p>
              <p class="text-gray-300">
                <%= address.city %>, <%= address.state %>
              </p>
              <p class="text-gray-300">Pincode: <%= address.pincode %></p>
              <p class="text-gray-300">Phone: <%= address.phone %></p>
        
              <!-- Toggle default address button -->
              <% if (!address.isDefault) { %>
                <button
                  onclick="toggleDefaultAddress('<%= address._id %>')"
                  class="bg-blue-500 hover:bg-blue-600 px-3 py-1 rounded text-sm mt-2"
                >
                  Set as Default
                </button>
              <% } %>
        
              <!-- Edit Button -->
              <button
                onclick="openEditForm('<%= address._id %>', '<%= address.name %>', '<%= address.address %>', '<%= address.landmark %>', '<%= address.city %>', '<%= address.state %>', '<%= address.pincode %>', '<%= address.phone %>')"
                class="bg-yellow-500 hover:bg-yellow-600 px-3 py-1 rounded text-sm mt-2"
              >
                Edit
              </button>
              <!-- Delete Button -->
              <button
                onclick="showDeleteConfirmation('<%= address._id %>')"
                class="bg-red-500 hover:bg-red-600 px-3 py-1 rounded text-sm mt-2"
              >
                Delete
              </button>
            </div>
            <% }) %>
          </div>
        </div>

        <!-- Delete Confirmation Modal -->
        <div id="deleteConfirmationModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center">
          <div class="glass-card p-6 rounded-lg text-white shadow-lg max-w-lg w-full relative">
            <h3 class="text-xl font-semibold mb-4">Delete Address</h3>
            <p class="text-gray-300 mb-6">Are you sure you want to delete this address? This action cannot be undone.</p>
            <div class="flex justify-end space-x-4">
              <button onclick="closeDeleteModal()" class="bg-gray-500 hover:bg-gray-600 px-4 py-2 rounded-lg text-white">
                Cancel
              </button>
              <button id="confirmDeleteBtn" class="bg-red-500 hover:bg-red-600 px-4 py-2 rounded-lg text-white">
                Delete
              </button>
            </div>
          </div>
        </div>
      </div>

      <script>
        function openAddAddressForm() {
            document.getElementById("addAddressModal").classList.remove("hidden");
        }
    
        function closeAddAddressForm() {
            document.getElementById("addAddressModal").classList.add("hidden");
        }
    
        function openEditForm(id, name, address, landmark, city, state, pincode, phone) {
            document.getElementById("editId").value = id;
            document.getElementById("editName").value = name;
            document.getElementById("editAddress").value = address;
            document.getElementById("editLandmark").value = landmark;
            document.getElementById("editCity").value = city;
            document.getElementById("editState").value = state;
            document.getElementById("editPincode").value = pincode;
            document.getElementById("editPhone").value = phone;
            document.getElementById("editAddressForm").action = `/edit-address/${id}`;
            document.getElementById("editModal").classList.remove("hidden");
        }
    
        function closeEditForm() {
            document.getElementById("editModal").classList.add("hidden");
        }
    
        function toggleDefaultAddress(addressId) {
            fetch(`/set-default-address/${addressId}`, {
                method: 'POST',
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    Swal.fire("Error", "Failed to update default address.", "error");
                }
            });
        }
    
        let currentAddressId = null;
    
        function showDeleteConfirmation(addressId) {
            currentAddressId = addressId;
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, delete it!",
            }).then((result) => {
                if (result.isConfirmed) {
                    deleteAddress();
                }
            });
        }
    
        function deleteAddress() {
            if (currentAddressId) {
                fetch(`/delete-address/${currentAddressId}`, { method: 'DELETE' })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire("Deleted!", "Your address has been deleted.", "success").then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire("Error", "Failed to delete address.", "error");
                    }
                })
                .catch(() => Swal.fire("Error", "Something went wrong!", "error"));
            }
        }
    
        document.getElementById('addAddressForm').addEventListener('submit', function (e) {
            e.preventDefault();
    
            const form = this;
            const name = form.name.value.trim();
            const address = form.address.value.trim();
            const landmark = form.landmark.value.trim();
            const city = form.city.value.trim();
            const state = form.state.value.trim();
            const pincode = form.pincode.value.trim();
            const phone = form.phone.value.trim();
            const addressType = form.addressType.value.trim();
    
            // Regular expressions for validation
            const textRegex = /^[A-Za-z\s]+$/;  // Only letters and spaces
            const pincodeRegex = /^\d{6}$/;  // 6-digit pincode
            const phoneRegex = /^\d{10}$/;   // 10-digit phone number
    
            if (!addressType) {
                Swal.fire("Validation Error", "Please select an address type.", "warning");
                return;
            }
            if (!name.match(textRegex)) {
                Swal.fire("Validation Error", "Full Name should only contain letters and spaces.", "warning");
                return;
            }
            if (!address) {
                Swal.fire("Validation Error", "Address is required.", "warning");
                return;
            }
            if (!landmark.match(textRegex)) {
                Swal.fire("Validation Error", "Landmark should only contain letters and spaces.", "warning");
                return;
            }
            if (!city.match(textRegex)) {
                Swal.fire("Validation Error", "City should only contain letters and spaces.", "warning");
                return;
            }
            if (!state.match(textRegex)) {
                Swal.fire("Validation Error", "State should only contain letters and spaces.", "warning");
                return;
            }
            if (!pincode.match(pincodeRegex)) {
                Swal.fire("Validation Error", "Please enter a valid 6-digit Indian Pincode.", "warning");
                return;
            }
            if (!phone.match(phoneRegex)) {
                Swal.fire("Validation Error", "Please enter a valid 10-digit Indian phone number.", "warning");
                return;
            }
    
            form.submit();
        });
    </script>
    
    </body>
  </html>